remove SA and namingInfix?
move adminUsername and adminPassword to default parameters

default params:
	unique naming substring
	location

for resources:
    1 input: unique naming subsubstring
    All else selects:
        "from Parameter option"
	other reasonable options based on existing resources


TODO
P0
==
> refactor types to have their own object?
> allow custom VM images?
> multiple subnets per vnet (& referencable as such)
> addressPrefix should have its own type and should do validation on the format
> VM
> VM boot diagnostics (requires changing 'properties' of blockTypes to have a displayName ("VM boot diagnostics SA") in addition to the property blockType ("SA"), which is already there)
> VM sizes should have better selection of sizes
> test substring and use it on uniqueString for SA
> should choose good order of keys in template
> should choose good order of options in dropdowns (e.g. if have an option, don't default to 'none')
> script extensions
> refactor customization code (should be able to handle dependsOn's and property gathering generically)
> availability set
> storing infixes but displaying full names; is mildly confusing in the code since in some places we need to convert between the two (e.g. getInfixFromBlockName); should have one canonical representation ideally
> delete whole resources
> placeholders to suggest to user what to put
> replace strings with algebraic types (if they exist in JS) so get errors automatically instead of having to check everywhere (e.g. if write wrong string, have to catch that with error checking; if write wrong algebraic type, will auto-error)
> could probably move 'required' to a property of types (it only really does anything for adding *'s (everywhere) and for adding 'none' as option in dropdown)


P1
==
> LB
> NIC should reference LB backend address pools
> VMSS
> Data Disks on VMs
> ARM functions for passing into script extensions
> network security groups
> "make parameter" option and way to use parameters
> UI for doing concats
> multiple LB rules
> validation (e.g. boot diagnostics can't use Premium storage; SA storage name can only contain lowercase letters and numbers, endPort >= startPort, password is strong enough (add to password type isValid), domainNameLabel is actually a label and not a FQDN, etc.)
> LB probe options (port, interval, number, probe url?, multiple probes)
> edit or delete both entire resources and individual properties of resources


P2
==
> tcp/udp (LB, nsg's)
> copyIndex on all resources
> custom VM images
> multiple addressPrefixes per vnet
> subnets really shouldn't be a separate block; they should be a part of vnets with some nice UI; this is both an end-experience thing and a namespace issue; for instance, in an ARM template, you can have subnets with the same names as long as they are in different vnets; this tool won't be able to generate this, though, becasue it checks the subnet infix as if subnets were in the top-level namespace and refuses to make duplicates even if they are in different vnets

> add "generateForMe"
> make template variables instead of just plopping same value hard-coded in template

P3
==
> other things in templates

> integrate with schema somehow?

> VMSS boot diagnostics?

> error checking
  > e.g. that ports are real numbers, etc.
  > ports adhere to inequality constraints (start < end for nat rules, etc.)
  > don't have overlapping subnets within a vnet
  > e.g. when spitting out errors, should spit out all errors instead of just one (e.g. in LB)

> make 10.0.0.0/24 default value for subnets

> assumes IPv4 for addressPrefixes; expand to IPv6?
